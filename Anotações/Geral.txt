HTML: linguagem de marcação utilizada para estruturar os elementos
 da página, como parágrafos, links, títulos, tabelas, imagens 
e até vídeos.

CSS: linguagem de estilos utilizada para definir
 cores, fontes, tamanhos, posicionamento e qualquer outro valor
 estético para os elementos da página.


IMAGENS
para colocar uma imagem utilizamos img (<img src="" alt="">) 
Ou digitamos (img) e clicamos (enter) se for no Visual Studio Code.
dentro dos "" podemos colocar o nome da imagem, ou só segurar o CTRL + espaço 
e a imagem que está na pasta aparecerá.
caso tivermos uma subpasta, OUTRA pasta dentro do arquivo podemos:
colocar o comando (<img src="" alt="">) e dentro dos "" colocamos:

 "nome da pasta/nome da imagem"

EXEMPLO:
tenho uma pasta chamada imagens, e dentro dela tenho uma 
imagem com o logo da HTML.
Oque eu faria:
<img src="imagens/logo HTML.png" alt="logo HTML"


ICONE DA PAGINA
para colocar um icone, basta te-lo em (.ico)
vc pode transformar PNG em icone no site FAVICON
daí, vai no VSC e escreve link
vai aparecer "link.favicon" 
ou vc vai precisar escrever 
<link rel="shortcut icon" href="" type="image/x-icon">

o nome do icone vai ficar dentro de (href= "")
mesma coisa, apenas segurar CTRL+ESPAÇO e vai aparecer uma estrelinha com o
 =ícone.

FORMA= CSS
SENTIDO= HTML

HTML trabalha com semântica.
não use <b> (bolt) para negrito, use <strong> que na semântica 
significa força.

fontes:
Medidas Absolutas: 

	cm, mm, in, px, pt, pc

Medidas Relativas:
            
	em	->	relativo ao tamanho natural da fonte
	ex	->	relativo a altura x da fonte
	rem	->	tipo em, mas relativo a fonte configurada no body
	vw	->	relativo a largura da view port
	vh	->	relativo a altura da view port
	%	->	porcentagem

Recomendação w3c:  "px" ou "em"

Altura padrão:  16px ou 1em

Importar fontes de:  google fonts

 -> Escolher a fonte e adicionar todos os 'styles' que deseja usar;

 -> Em 'view selected families', copiar o código da fonte entre <style> e colar nas primeiras linhas parte de estilo CSS, antes dos parâmetros:

	@import url ('link css2
	family = Kaushan+Script&display=swap');

-> Copiar o código em CSS rules e colar no parâmetro onde deseja usar a fonte, para especificar a font-family:	

	body {
            font-family: 'Work Sans', Arial, Verdana, sans-serif;
	}

Dica: Antes de copiar o código do Google Fonts, desativar a tradução, pois ela cria espaçamentos, troca vírgulas por pontos e altera a escrita de algumas palavras no site.

Tudo que em HTML é id  = em CSS é #
Tudo que em HTML é class= em CSS é .

Header: cabeçalho
Nav: Menu/opções
Main: conteúdo principal, textos. dentro podem ter <h1>, <p>, e etc.

ENTRAMOS EM GITHUB!
é pra rir ou chorar?

meu domínio: https://perolamendez2.github.io/html-css/


algumas perguntas importantes:
  oque é o box model no css?
    -modelo que define a estrutura de elementos no HTML.

  oque é um media querry no css?
    -tecnica de design responsivo (com base em dispositivos).



IMPORTANTE
acabei de pesquisar

para se referir a um id no CSS em VScode, utilizamos o #

ex: h1#id{

}

AGOOOOORA, para se referir a uma classe, utilizamos o .
ex: h1.class{

}
NAO ESQUECE, ID (#) CLASSE (.)


sabia que podemos usar uma imagem no noso site que NÃO está salva no nosso pc?
podemos utilizar uma impagem de um site, do google imagens, etc.
Basta copiar o link da imagem e jogar no codigo, ó:


IMAGENS EM CSS:

body{
background-image= url ()
}

basta colocar o link da imagem dentro do () parênteses. Mas você vai ficar
dependente desse link. Se um dia a imagem sair do ar, ela sai do seu site tmb.


Para criar o efeito zebrado dentro das linhas da sua tabela, é importante que determinemos em que parte da tabela queremos aplicar esse efeito, geralmente aplicamos somente nas linhas da parte do corpo da tabela (tbody).

Para fazer isso, basicamente devemos abrir um seletor para o elemento " tbody ", indicado o seu filho direto que queremos formatar, que no caso é o " tr " (linha de tabela)... No elemento tr, iremos usar a pseudo-classe " nth-child() ". Para essa pseudo-classe, devemos inserir um valor dentro dos parênteses: O valor para aplicar o efeito zebrado é o " 2n ", que faz com que o background-color configurado para a linha seja inserido de duas em duas linhas, uma sim e uma não (mude o valor numérico se desejar um intervalo maior de inserção).

Ficaria assim:

tbody > tr:nth-child(2n) {
    background-color: lightgray;
}

Obs.: Dentro do seletor exemplificado acima, temos uma declaração de especificação de background, a cor determinada nessa
 declaração que vai ser aplicada nas linhas zebradas.

Na pseudo-classe " nth-child() ", ao invés de usarmos o valor " 2n ", também podemos usar os valores
 nominais " even " OU " odd " (par ou ímpar). Com um desses dois nomes como valor, podemos deixar toda 
linha que é ímpar (odd) com background, ou vice-versa, se for o valor even.

O valor " 2n " seria equivalente ao valor nominal " even " (par)

Entretanto, também temos o valor " 2n-1 ", que seria equivalente ao valor nominal " odd " (ímpar)

Como já foi digo, dentro do seu seletor, você deve determinar uma cor para o background da linha, entretanto
 esse seletor só vai aplicar essa cor para as linhas pares (ou impares se for o caso), gerando o efeito zebrado...

Dessa forma, uma dica é abrir um outro seletor, idêntico ao primeiro mas com um valor OPOSTO para a pseudo-classe
 " nth-child() " (se o valor do primeiro seletor é odd, para o segundo tem que ser even e vice-versa). E a cor do
 background configurada nesse segundo seletor tem que ser diferente. Assim você criará um efeito zebrado com cores que se alternam... 
Uma linha azul e outra amarela e assim por diante por exemplo.

Com a pseudo-classe " nth-child() " exemplificamos o efeito zebrado com uma declaração de background-color dentro do seletor,
 entretanto, além da cor, dentro desse mesmo seletor você também pode fazer outras alterações que se manifestam de forma alternada 
(linha sim, linha não). Como por exemplo: Mudar o tamanho da letra, peso da letra, sublinhar e por aí vai...

Nota: Você deve utilizar a técnica do efeito zebrado em tabelas que tem muitos dados lateralmente (muitas colunas), quando a letra 
é muito pequena e quando a tabela tem muitas linhas.


MESCLAGEM DE CELULASSSSSSSSSSSSSSSS

A mesclagem de células é uma técnica muito importante e que está presente em muitas tabelas.
 Dessa forma, é altamente necessário que você aprenda a fazer mesclagem, porque cedo ou tarde 
você vai precisar usar isso no seu projeto.

Entenda que apesar de chamarmos de "mesclagem de células", na realidade, considerando que você 
já tenha uma tabela montada, basicamente temos que deletar uma célula e expandir a célula vizinha.
 Dessa forma, é como se a célula vizinha que foi expandida, ocupasse também o espaço da célula que foi deletada... "mesclando".

Portanto, se você quer mesclar células, a primeira coisa que você tem que fazer é ir no HTML da 
sua tabela e deletar a célula vizinha da célula que irá ser expandida. Depois que você fizer isso, 
a sua tabela irá ficar com um "buraco", uma lacuna ocasionada pela ausência da célula que foi deletada. 
(essa lacuna sempre vai começar pela parte direita da tabela, mesmo que a célula excluída seja da parte esquerda)

Iremos preencher essa lacuna expandindo a célula vizinha, mesclando. Essa expansão pode ser feita em
 forma de coluna ou em forma de linha. 

Quando devemos utilizar cada uma dessas formas de expansão (coluna ou linha)?

- Utilize a expansão em forma de COLUNA quando a célula vizinha, aquela que você deletou, estiver ao lado
 (esquerdo ou direito) da célula que irá ser expandida. 

- Utilize a expansão em forma de LINHA quando a célula vizinha, aquela que você deletou, estiver embaixo (nunca em cima)
da célula que irá ser expandida. 

EXPANSÃO NA PRÁTICA:

Expansão em forma de COLUNA: Para fazer isso, dentro da célula que você quer expandir, você deve inserir o parâmetro HTML 
" colspan " com o valor " 2 ", fazendo a célula ocupar duas colunas. Se você quiser expandir essa célula para mais de duas colunas
 (previamente excluir as células vizinhas), altere o valor numérico do parâmetro. Esse valor numérico que define quantas " colunas " que a célula deve expandir.

Expansão em forma de LINHA: Para fazer isso, dentro da célula que você quer expandir, você deve inserir o parâmetro HTML 
" rowspan " com o valor " 2 ", fazendo a célula ocupar duas linhas. Se você quiser expandir essa célula para mais de duas linhas 
(previamente excluir as células vizinhas), altere o valor numérico do parâmetro. Esse valor numérico que define quantas " linhas " que a célula deve expandir.